.\" ( ditsps foo.ms ) > foo.ps
.nr PS 16
.nr VS 17
.LP
.nf
\fC
.\" ------------------------------------------------------------------
Example due to Jim Larus.
-------------------------------------------
sum.c
-------------------------------------------

#include <stdio.h>

int
main (int argc, char *argv[])
{
  int i;
  int sum = 0;

  for (i = 0; i <= 100; i++) sum += i * i;
  printf ("The sum from 0 .. 100 is %d\\n", sum);
}
.bp
-------------------------------------------
sum.s
-------------------------------------------
	.text
	.align	2
	.globl	main
	.ent	main 2
main:
	subu	$sp, 32
	sw	$31, 20($sp)
	sd	$4, 32($sp)
	sw	$0, 24($sp)
	sw	$0, 28($sp)
loop:
	lw	$14, 28($sp)
	mul	$15, $14, $14
	lw	$24, 24($sp)
	addu	$25, $24, $15
	sw	$25, 24($sp)
	addu	$8, $14, 1
	sw	$8, 28($sp)
	ble	$8, 100, loop
	la	$4, str
	lw	$5, 24($sp)
	jal	printf
	move	$2, $0
	lw	$31, 20($sp)
	addu	$sp, 32
	j	$31
	.end	main

	.data
	.align	0
str:
	.asciiz	"The sum from 0 .. 100 is %d\\n"
.bp
-------------------------------------------
sum.nolabels
-------------------------------------------

addiu	sp,sp,-32
sw	ra,20(sp)
sw	a0,32(sp)
sw	a1,36(sp)
sw	zero,24(sp)
sw	zero,28(sp)
lw	t6,28(sp)
lw	t8,24(sp)
multu	t6,t6
addiu	t0,t6,1
slti	at,t0,101
sw	t0,28(sp)
mflo	t7
addu	t9,t8,t7
bne	at,zero,-9
sw	t9,24(sp)
lui	a0,4096
lw	a1,24(sp)
jal	1048812
addiu	a0,a0,1072
lw	ra,20(sp)
addiu	sp,sp,32
jr	ra
move	v0,zero
.bp
-------------------------------------------
sum.machine_lang
-------------------------------------------

00100111101111011111111111100000
10101111101111110000000000010100
10101111101001000000000000100000
10101111101001010000000000100100
10101111101000000000000000011000
10101111101000000000000000011100
10001111101011100000000000011100
10001111101110000000000000011000
00000001110011100000000000011001
00100101110010000000000000000001
00101001000000010000000001100101
10101111101010000000000000011100
00000000000000000111100000010010
00000011000011111100100000100001
00010100001000001111111111110111
10101111101110010000000000011000
00111100000001000001000000000000
10001111101001010000000000011000
00001100000100000000000011101100
00100100100001000000010000110000
10001111101111110000000000010100
00100111101111010000000000100000
00000011111000000000000000001000
00000000000000000001000000100001
